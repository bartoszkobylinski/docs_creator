version: '3.8'

services:
  docs-assistant:
    build: .
    container_name: flask-docs-assistant
    ports:
      - "8200:8200"
    volumes:
      # Mount your project directory
      - ./project:/app/project:ro
      # Mount directory for generated reports and backups (persistent)
      - ./reports:/app/reports
      - ./backups:/app/backups
      # Mount custom configuration if needed
      - ./.env:/app/.env:ro
    environment:
      # OpenAI API key for AI features (optional)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      # Application settings
      - PROJECT_BASE_PATH=/app/project
      - REPORTS_DIR=/app/reports
      - BACKUPS_DIR=/app/backups
      - PYTHONPATH=/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8200/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Additional service for batch processing
  docs-scanner:
    build: .
    container_name: flask-docs-scanner
    volumes:
      - ./project:/app/project:ro
      - ./reports:/app/reports
    environment:
      - PROJECT_BASE_PATH=/app/project
      - REPORTS_DIR=/app/reports
    command: >
      sh -c "
        echo 'Starting Documentation Scanner...' &&
        poetry run python fastdoc/cli.py /app/project --out /app/reports/comprehensive_report.json --verbose &&
        echo 'Scanner completed. Report available at /app/reports/comprehensive_report.json'
      "
    profiles:
      - scanner
    
volumes:
  reports:
    driver: local
  backups:
    driver: local

networks:
  default:
    name: flask-docs-network