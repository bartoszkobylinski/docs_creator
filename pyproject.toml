[tool.poetry]
name = 'fastdoc'
version = '0.1.0'
description = 'FastAPI doc-coverage scanner + dashboard'
authors = ['Bartosz Kobylinski']

[tool.poetry.dependencies]
python = '^3.10'
typer = '^0.16.0'
pandas = "^2.3"
openai = "^1.0"
flask = "^3.0.0"
flask-cors = "^4.0.0"
python-multipart = "^0.0.6"
jinja2 = "^3.1.0"
atlassian-python-api = "^3.41.0"
python-dotenv = "^1.1.1"

[tool.poetry.group.dev.dependencies]
black = "^23.0"
flake8 = "^6.0"
mypy = "^1.0"
pytest = "^7.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.0"
pytest-mock = "^3.0"
httpx = "^0.24.0"
mutmut = "^2.4.0"
freezegun = "^1.2.0"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=fastdoc",
    "--cov=services",
    "--cov=api",
    "--cov=core",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=30"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "regression: marks tests as regression tests"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["fastdoc", "services", "api", "core"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/virtualenv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.mutmut]
paths_to_mutate = "fastdoc/,services/,api/,core/"
backup = false
runner = "poetry run python -m pytest tests/ -x --tb=no --disable-warnings -q --no-cov"
tests_dir = "tests/"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"